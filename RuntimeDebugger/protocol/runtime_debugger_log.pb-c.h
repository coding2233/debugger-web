/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: runtime_debugger_log.proto */

#ifndef PROTOBUF_C_runtime_5fdebugger_5flog_2eproto__INCLUDED
#define PROTOBUF_C_runtime_5fdebugger_5flog_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct RuntimeDebugger__LogNode RuntimeDebugger__LogNode;
typedef struct RuntimeDebugger__LogList RuntimeDebugger__LogList;


/* --- enums --- */

typedef enum _RuntimeDebugger__LogType {
  RUNTIME_DEBUGGER__LOG_TYPE__Error = 0,
  RUNTIME_DEBUGGER__LOG_TYPE__Assert = 1,
  RUNTIME_DEBUGGER__LOG_TYPE__Warning = 2,
  RUNTIME_DEBUGGER__LOG_TYPE__Log = 3,
  RUNTIME_DEBUGGER__LOG_TYPE__Exception = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(RUNTIME_DEBUGGER__LOG_TYPE)
} RuntimeDebugger__LogType;

/* --- messages --- */

struct  RuntimeDebugger__LogNode
{
  ProtobufCMessage base;
  char *log_time;
  protobuf_c_boolean has_log_frame_count;
  int32_t log_frame_count;
  protobuf_c_boolean has_log_type;
  RuntimeDebugger__LogType log_type;
  char *log_message;
  char *log_stack_track;
};
#define RUNTIME_DEBUGGER__LOG_NODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&runtime_debugger__log_node__descriptor) \
, NULL, 0, 0, 0, RUNTIME_DEBUGGER__LOG_TYPE__Error, NULL, NULL }


struct  RuntimeDebugger__LogList
{
  ProtobufCMessage base;
  size_t n_log_node_list;
  RuntimeDebugger__LogNode **log_node_list;
};
#define RUNTIME_DEBUGGER__LOG_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&runtime_debugger__log_list__descriptor) \
, 0,NULL }


/* RuntimeDebugger__LogNode methods */
void   runtime_debugger__log_node__init
                     (RuntimeDebugger__LogNode         *message);
size_t runtime_debugger__log_node__get_packed_size
                     (const RuntimeDebugger__LogNode   *message);
size_t runtime_debugger__log_node__pack
                     (const RuntimeDebugger__LogNode   *message,
                      uint8_t             *out);
size_t runtime_debugger__log_node__pack_to_buffer
                     (const RuntimeDebugger__LogNode   *message,
                      ProtobufCBuffer     *buffer);
RuntimeDebugger__LogNode *
       runtime_debugger__log_node__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   runtime_debugger__log_node__free_unpacked
                     (RuntimeDebugger__LogNode *message,
                      ProtobufCAllocator *allocator);
/* RuntimeDebugger__LogList methods */
void   runtime_debugger__log_list__init
                     (RuntimeDebugger__LogList         *message);
size_t runtime_debugger__log_list__get_packed_size
                     (const RuntimeDebugger__LogList   *message);
size_t runtime_debugger__log_list__pack
                     (const RuntimeDebugger__LogList   *message,
                      uint8_t             *out);
size_t runtime_debugger__log_list__pack_to_buffer
                     (const RuntimeDebugger__LogList   *message,
                      ProtobufCBuffer     *buffer);
RuntimeDebugger__LogList *
       runtime_debugger__log_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   runtime_debugger__log_list__free_unpacked
                     (RuntimeDebugger__LogList *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RuntimeDebugger__LogNode_Closure)
                 (const RuntimeDebugger__LogNode *message,
                  void *closure_data);
typedef void (*RuntimeDebugger__LogList_Closure)
                 (const RuntimeDebugger__LogList *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    runtime_debugger__log_type__descriptor;
extern const ProtobufCMessageDescriptor runtime_debugger__log_node__descriptor;
extern const ProtobufCMessageDescriptor runtime_debugger__log_list__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_runtime_5fdebugger_5flog_2eproto__INCLUDED */
